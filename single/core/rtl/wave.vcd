$version Generated by VerilatedVcd $end
$date Thu Jan  5 14:46:33 2023 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 ^" clk $end
  $var wire  1 _" reset $end
  $scope module cpu $end
   $var wire 64 # IF_pc [63:0] $end
   $var wire  1 ^" clk $end
   $var wire 64 b" ex_agu_mem_addr [63:0] $end
   $var wire 64 ? ex_alu_rd_wdata [63:0] $end
   $var wire  1 d" ex_branch_jump $end
   $var wire 10 6 id_alu_info [9:0] $end
   $var wire  6 7 id_branch_info [5:0] $end
   $var wire  6 9 id_csr_info [5:0] $end
   $var wire  1 = id_ebreak $end
   $var wire  1 < id_ecall $end
   $var wire  1 a" id_ilegl_inst $end
   $var wire 64 : id_imm [63:0] $end
   $var wire 11 8 id_ld_st_info [10:0] $end
   $var wire  1 > id_mret $end
   $var wire 12 5 id_opcode_info [11:0] $end
   $var wire  1 3 id_rd_en $end
   $var wire  5 4 id_rd_idx [4:0] $end
   $var wire  1 , id_rs1_en $end
   $var wire  5 ( id_rs1_idx [4:0] $end
   $var wire 64 / id_rs1_rdata [63:0] $end
   $var wire  1 - id_rs2_en $end
   $var wire  5 . id_rs2_idx [4:0] $end
   $var wire 64 1 id_rs2_rdata [63:0] $end
   $var wire  1 `" if_bus_err $end
   $var wire 32 + if_instr [31:0] $end
   $var wire  1 ' if_jalr_rs1_en $end
   $var wire  5 ( if_jalr_rs1_idx [4:0] $end
   $var wire  1 `" if_pc_misalign $end
   $var wire 64 % if_pc_next [63:0] $end
   $var wire  1 _" reset $end
   $var wire 64 ) rf_jalr_rs1_rdata [63:0] $end
   $var wire 64 / rf_rs1_rdata [63:0] $end
   $var wire 64 1 rf_rs2_rdata [63:0] $end
   $var wire  1 3 wb_rd_en $end
   $var wire  5 4 wb_rd_idx [4:0] $end
   $var wire 64 ? wb_rd_wdata [63:0] $end
   $scope module ex_u $end
    $var wire 10 6 alu_info_i [9:0] $end
    $var wire  6 7 branch_info_i [5:0] $end
    $var wire  6 9 csr_info_i [5:0] $end
    $var wire 64 b" ex_agu_mem_addr_o [63:0] $end
    $var wire 64 ? ex_alu_rd_wdata_o [63:0] $end
    $var wire  1 d" ex_branch_jump_o $end
    $var wire 64 : imm_i [63:0] $end
    $var wire 11 8 ld_st_info_i [10:0] $end
    $var wire 12 5 opcode_info_i [11:0] $end
    $var wire 64 # pc_i [63:0] $end
    $var wire 64 / rs1_rdata_i [63:0] $end
    $var wire 64 1 rs2_rdata_i [63:0] $end
    $scope module alu_u $end
     $var wire  1 3" alu_add $end
     $var wire 64 D" alu_add_sub_res [63:0] $end
     $var wire  1 <" alu_and $end
     $var wire 64 R" alu_and_res [63:0] $end
     $var wire  1 d" alu_branch_jump_o $end
     $var wire 10 6 alu_info_i [9:0] $end
     $var wire 64 @" alu_op1 [63:0] $end
     $var wire 64 B" alu_op2 [63:0] $end
     $var wire  1 ;" alu_or $end
     $var wire 64 P" alu_or_res [63:0] $end
     $var wire 64 T" alu_res [63:0] $end
     $var wire 64 ? alu_res_o [63:0] $end
     $var wire 32 W" alu_res_truncat [31:0] $end
     $var wire 64 X" alu_res_w [63:0] $end
     $var wire  1 5" alu_sll $end
     $var wire 64 F" alu_sll_res [63:0] $end
     $var wire  1 6" alu_slt $end
     $var wire 64 H" alu_slt_res [63:0] $end
     $var wire  1 7" alu_sltu $end
     $var wire 64 m" alu_sltu_res [63:0] $end
     $var wire  1 :" alu_sra $end
     $var wire 64 N" alu_sra_res [63:0] $end
     $var wire  1 9" alu_srl $end
     $var wire 64 L" alu_srl_res [63:0] $end
     $var wire  1 4" alu_sub $end
     $var wire  1 8" alu_xor $end
     $var wire 64 J" alu_xor_res [63:0] $end
     $var wire  1 #! branch_beq $end
     $var wire  1 &! branch_bge $end
     $var wire  1 (! branch_bgeu $end
     $var wire  1 %! branch_blt $end
     $var wire  1 '! branch_bltu $end
     $var wire  1 $! branch_bne $end
     $var wire  6 7 branch_info_i [5:0] $end
     $var wire  1 Z" eq $end
     $var wire  1 ]" ge $end
     $var wire  1 p" geu $end
     $var wire 64 : imm_i [63:0] $end
     $var wire  1 \" lt $end
     $var wire  1 o" ltu $end
     $var wire  1 [" ne $end
     $var wire  1 ," op_alu $end
     $var wire  1 *" op_alu_imm $end
     $var wire  1 +" op_alu_imm_w $end
     $var wire  1 -" op_alu_w $end
     $var wire  1 2" op_auipc $end
     $var wire  1 ." op_branch $end
     $var wire  1 /" op_jal $end
     $var wire  1 0" op_jalr $end
     $var wire  1 1" op_lui $end
     $var wire 12 5 opcode_info_i [11:0] $end
     $var wire 64 # pc_i [63:0] $end
     $var wire  1 =" res_sel_add $end
     $var wire  1 ?" res_sel_add_sub $end
     $var wire  1 <" res_sel_and $end
     $var wire  1 ;" res_sel_or $end
     $var wire  1 5" res_sel_sll $end
     $var wire  1 6" res_sel_slt $end
     $var wire  1 7" res_sel_sltu $end
     $var wire  1 :" res_sel_sra $end
     $var wire  1 9" res_sel_srl $end
     $var wire  1 >" res_sel_sub $end
     $var wire  1 8" res_sel_xor $end
     $var wire 64 / rs1_rdata_i [63:0] $end
     $var wire 64 1 rs2_rdata_i [63:0] $end
     $var wire  1 V" sel_w_res $end
    $upscope $end
   $upscope $end
   $scope module id_u $end
    $var wire  3 W fun3 [2:0] $end
    $var wire  7 X fun7 [6:0] $end
    $var wire 10 6 id_alu_info_o [9:0] $end
    $var wire  6 7 id_branch_info_o [5:0] $end
    $var wire  6 9 id_csr_info_o [5:0] $end
    $var wire  1 = id_ebreak_o $end
    $var wire  1 < id_ecall_o $end
    $var wire  1 a" id_ilegl_instr_o $end
    $var wire 64 : id_imm_o [63:0] $end
    $var wire 11 8 id_ld_st_info_o [10:0] $end
    $var wire  1 > id_mret_o $end
    $var wire 12 5 id_opcode_info_o [11:0] $end
    $var wire  1 3 id_rd_en_o $end
    $var wire  5 4 id_rd_idx_o [4:0] $end
    $var wire  1 , id_rs1_en_o $end
    $var wire  5 ( id_rs1_idx_o [4:0] $end
    $var wire 64 / id_rs1_rdata_o [63:0] $end
    $var wire  1 - id_rs2_en_o $end
    $var wire  5 . id_rs2_idx_o [4:0] $end
    $var wire 64 1 id_rs2_rdata_o [63:0] $end
    $var wire 32 + instr_i [31:0] $end
    $var wire  7 V opcode [6:0] $end
    $var wire  5 4 rd [4:0] $end
    $var wire 64 / rf_rs1_rdata_i [63:0] $end
    $var wire 64 1 rf_rs2_rdata_i [63:0] $end
    $var wire  5 ( rs1 [4:0] $end
    $var wire  5 . rs2 [4:0] $end
    $var wire  1 r rv64_add $end
    $var wire  1 e rv64_addi $end
    $var wire  1 f rv64_addiw $end
    $var wire  1 s rv64_addw $end
    $var wire  1 [ rv64_alu $end
    $var wire  1 Y rv64_alu_imm $end
    $var wire  1 Z rv64_alu_imm_w $end
    $var wire  1 \ rv64_alu_w $end
    $var wire  1 "! rv64_and $end
    $var wire  1 q rv64_andi $end
    $var wire  1 c rv64_auipc $end
    $var wire 64 >! rv64_b_imm [63:0] $end
    $var wire  1 #! rv64_beq $end
    $var wire  1 &! rv64_bge $end
    $var wire  1 (! rv64_bgeu $end
    $var wire  1 %! rv64_blt $end
    $var wire  1 '! rv64_bltu $end
    $var wire  1 $! rv64_bne $end
    $var wire  1 ] rv64_branch $end
    $var wire  1 6! rv64_csrrc $end
    $var wire  1 H! rv64_csrrci $end
    $var wire  1 5! rv64_csrrs $end
    $var wire  1 G! rv64_csrrsi $end
    $var wire  1 4! rv64_csrrw $end
    $var wire  1 F! rv64_csrrwi $end
    $var wire  1 = rv64_ebreak $end
    $var wire  1 < rv64_ecall $end
    $var wire 64 :! rv64_i_imm [63:0] $end
    $var wire 64 : rv64_imm [63:0] $end
    $var wire  1 ] rv64_imm_sel_b $end
    $var wire  1 D! rv64_imm_sel_i $end
    $var wire  1 ^ rv64_imm_sel_j $end
    $var wire  1 a rv64_imm_sel_s $end
    $var wire  1 E! rv64_imm_sel_u $end
    $var wire 64 @! rv64_j_imm [63:0] $end
    $var wire  1 ^ rv64_jal $end
    $var wire  1 _ rv64_jalr $end
    $var wire  1 )! rv64_lb $end
    $var wire  1 -! rv64_lbu $end
    $var wire  1 ,! rv64_ld $end
    $var wire  1 *! rv64_lh $end
    $var wire  1 .! rv64_lhu $end
    $var wire  1 ` rv64_load $end
    $var wire  1 b rv64_lui $end
    $var wire  1 +! rv64_lw $end
    $var wire  1 /! rv64_lwu $end
    $var wire  1 > rv64_mret $end
    $var wire  1 3 rv64_need_rd $end
    $var wire  1 , rv64_need_rs1 $end
    $var wire  1 - rv64_need_rs2 $end
    $var wire  1 !! rv64_or $end
    $var wire  1 p rv64_ori $end
    $var wire 64 <! rv64_s_imm [63:0] $end
    $var wire  1 0! rv64_sb $end
    $var wire  1 3! rv64_sd $end
    $var wire  1 1! rv64_sh $end
    $var wire  1 v rv64_sll $end
    $var wire  1 g rv64_slli $end
    $var wire  1 h rv64_slliw $end
    $var wire  1 w rv64_sllw $end
    $var wire  1 x rv64_slt $end
    $var wire  1 i rv64_slti $end
    $var wire  1 y rv64_sltu $end
    $var wire  1 j rv64_sltui $end
    $var wire  1 } rv64_sra $end
    $var wire  1 n rv64_srai $end
    $var wire  1 o rv64_sraiw $end
    $var wire  1 ~ rv64_sraw $end
    $var wire  1 { rv64_srl $end
    $var wire  1 l rv64_srli $end
    $var wire  1 m rv64_srliw $end
    $var wire  1 | rv64_srlw $end
    $var wire  1 a rv64_store $end
    $var wire  1 t rv64_sub $end
    $var wire  1 u rv64_subw $end
    $var wire  1 2! rv64_sw $end
    $var wire  1 d rv64_system $end
    $var wire 64 B! rv64_u_imm [63:0] $end
    $var wire  1 z rv64_xor $end
    $var wire  1 k rv64_xori $end
   $upscope $end
   $scope module instr_fetch_u $end
    $var wire  1 E bj $end
    $var wire 64 F bj_pc_op1 [63:0] $end
    $var wire 64 C bj_pc_op2 [63:0] $end
    $var wire  1 `" if_bus_err_o $end
    $var wire 32 + if_instr_o [31:0] $end
    $var wire  1 ' if_jalr_rs1_en_o $end
    $var wire  5 ( if_jalr_rs1_idx_o [4:0] $end
    $var wire  1 `" if_pc_misalign_o $end
    $var wire 64 % if_pc_next_o [63:0] $end
    $var wire 64 ) jalr_rs1_rdata_i [63:0] $end
    $var wire  1 B mini_dec_branch $end
    $var wire 64 C mini_dec_imm [63:0] $end
    $var wire  1 A mini_dec_jal $end
    $var wire  1 ' mini_dec_jalr $end
    $var wire 64 H pc_add_op1 [63:0] $end
    $var wire 64 J pc_add_op2 [63:0] $end
    $var wire 64 # pc_i [63:0] $end
    $scope module if_bus_u $end
     $var wire  1 `" if_bus_bus_err_o $end
     $var wire 32 + if_bus_instr_o [31:0] $end
     $var wire  1 `" if_bus_pc_misalign_o $end
     $var wire 10 L pc [9:0] $end
     $var wire 64 # pc_i [63:0] $end
    $upscope $end
    $scope module if_mini_dec_u $end
     $var wire 32 + instr_i [31:0] $end
     $var wire  1 B mini_dec_branch_o $end
     $var wire 64 C mini_dec_imm_o [63:0] $end
     $var wire  1 A mini_dec_jal_o $end
     $var wire  1 ' mini_dec_jalr_o $end
     $var wire  5 ( mini_dec_jalr_rs1_idx_o [4:0] $end
     $var wire 12 M opcode_info [11:0] $end
     $scope module idu $end
      $var wire  3 W fun3 [2:0] $end
      $var wire  7 X fun7 [6:0] $end
      $var wire 10 P id_alu_info_o [9:0] $end
      $var wire  6 7 id_branch_info_o [5:0] $end
      $var wire  6 R id_csr_info_o [5:0] $end
      $var wire  1 T id_ebreak_o $end
      $var wire  1 S id_ecall_o $end
      $var wire  1 l" id_ilegl_instr_o $end
      $var wire 64 C id_imm_o [63:0] $end
      $var wire 11 Q id_ld_st_info_o [10:0] $end
      $var wire  1 U id_mret_o $end
      $var wire 12 M id_opcode_info_o [11:0] $end
      $var wire  1 O id_rd_en_o $end
      $var wire  5 4 id_rd_idx_o [4:0] $end
      $var wire  1 N id_rs1_en_o $end
      $var wire  5 ( id_rs1_idx_o [4:0] $end
      $var wire 64 h" id_rs1_rdata_o [63:0] $end
      $var wire  1 - id_rs2_en_o $end
      $var wire  5 . id_rs2_idx_o [4:0] $end
      $var wire 64 j" id_rs2_rdata_o [63:0] $end
      $var wire 32 + instr_i [31:0] $end
      $var wire  7 V opcode [6:0] $end
      $var wire  5 4 rd [4:0] $end
      $var wire 64 h" rf_rs1_rdata_i [63:0] $end
      $var wire 64 j" rf_rs2_rdata_i [63:0] $end
      $var wire  5 ( rs1 [4:0] $end
      $var wire  5 . rs2 [4:0] $end
      $var wire  1 r rv64_add $end
      $var wire  1 e rv64_addi $end
      $var wire  1 f rv64_addiw $end
      $var wire  1 s rv64_addw $end
      $var wire  1 [ rv64_alu $end
      $var wire  1 Y rv64_alu_imm $end
      $var wire  1 Z rv64_alu_imm_w $end
      $var wire  1 \ rv64_alu_w $end
      $var wire  1 "! rv64_and $end
      $var wire  1 q rv64_andi $end
      $var wire  1 c rv64_auipc $end
      $var wire 64 >! rv64_b_imm [63:0] $end
      $var wire  1 #! rv64_beq $end
      $var wire  1 &! rv64_bge $end
      $var wire  1 (! rv64_bgeu $end
      $var wire  1 %! rv64_blt $end
      $var wire  1 '! rv64_bltu $end
      $var wire  1 $! rv64_bne $end
      $var wire  1 ] rv64_branch $end
      $var wire  1 6! rv64_csrrc $end
      $var wire  1 9! rv64_csrrci $end
      $var wire  1 5! rv64_csrrs $end
      $var wire  1 8! rv64_csrrsi $end
      $var wire  1 4! rv64_csrrw $end
      $var wire  1 7! rv64_csrrwi $end
      $var wire  1 T rv64_ebreak $end
      $var wire  1 S rv64_ecall $end
      $var wire 64 :! rv64_i_imm [63:0] $end
      $var wire 64 C rv64_imm [63:0] $end
      $var wire  1 ] rv64_imm_sel_b $end
      $var wire  1 D! rv64_imm_sel_i $end
      $var wire  1 ^ rv64_imm_sel_j $end
      $var wire  1 a rv64_imm_sel_s $end
      $var wire  1 E! rv64_imm_sel_u $end
      $var wire 64 @! rv64_j_imm [63:0] $end
      $var wire  1 ^ rv64_jal $end
      $var wire  1 _ rv64_jalr $end
      $var wire  1 )! rv64_lb $end
      $var wire  1 -! rv64_lbu $end
      $var wire  1 ,! rv64_ld $end
      $var wire  1 *! rv64_lh $end
      $var wire  1 .! rv64_lhu $end
      $var wire  1 ` rv64_load $end
      $var wire  1 b rv64_lui $end
      $var wire  1 +! rv64_lw $end
      $var wire  1 /! rv64_lwu $end
      $var wire  1 U rv64_mret $end
      $var wire  1 O rv64_need_rd $end
      $var wire  1 N rv64_need_rs1 $end
      $var wire  1 - rv64_need_rs2 $end
      $var wire  1 !! rv64_or $end
      $var wire  1 p rv64_ori $end
      $var wire 64 <! rv64_s_imm [63:0] $end
      $var wire  1 0! rv64_sb $end
      $var wire  1 3! rv64_sd $end
      $var wire  1 1! rv64_sh $end
      $var wire  1 v rv64_sll $end
      $var wire  1 g rv64_slli $end
      $var wire  1 h rv64_slliw $end
      $var wire  1 w rv64_sllw $end
      $var wire  1 x rv64_slt $end
      $var wire  1 i rv64_slti $end
      $var wire  1 y rv64_sltu $end
      $var wire  1 j rv64_sltui $end
      $var wire  1 } rv64_sra $end
      $var wire  1 n rv64_srai $end
      $var wire  1 o rv64_sraiw $end
      $var wire  1 ~ rv64_sraw $end
      $var wire  1 { rv64_srl $end
      $var wire  1 l rv64_srli $end
      $var wire  1 m rv64_srliw $end
      $var wire  1 | rv64_srlw $end
      $var wire  1 a rv64_store $end
      $var wire  1 t rv64_sub $end
      $var wire  1 u rv64_subw $end
      $var wire  1 2! rv64_sw $end
      $var wire  1 d rv64_system $end
      $var wire 64 B! rv64_u_imm [63:0] $end
      $var wire  1 z rv64_xor $end
      $var wire  1 k rv64_xori $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module pc_reg_u $end
    $var wire 64 # IF_pc_o [63:0] $end
    $var wire  1 ^" clk $end
    $var wire  1 e" ena $end
    $var wire 64 % pc_next_i [63:0] $end
    $var wire  1 _" rst $end
    $scope module pc_dff $end
     $var wire 32 f" DATA_WIDTH [31:0] $end
     $var wire 32 g" RESET_VAL [31:0] $end
     $var wire  1 ^" clk $end
     $var wire 64 % d [63:0] $end
     $var wire  1 e" ena $end
     $var wire 64 # q [63:0] $end
     $var wire 64 # q_r [63:0] $end
     $var wire  1 _" rst $end
    $upscope $end
   $upscope $end
   $scope module regfile_u $end
    $var wire  1 ^" clk $end
    $var wire 32 )" i [31:0] $end
    $var wire  1 ' jalr_rs1_en_i $end
    $var wire  5 ( jalr_rs1_idx_i [4:0] $end
    $var wire  1 3 rd_en_i $end
    $var wire  5 4 rd_idx_i [4:0] $end
    $var wire 64 ? rd_wdata_i [63:0] $end
    $var wire 64 I! reg_data(1) [63:0] $end
    $var wire 64 [! reg_data(10) [63:0] $end
    $var wire 64 ]! reg_data(11) [63:0] $end
    $var wire 64 _! reg_data(12) [63:0] $end
    $var wire 64 a! reg_data(13) [63:0] $end
    $var wire 64 c! reg_data(14) [63:0] $end
    $var wire 64 e! reg_data(15) [63:0] $end
    $var wire 64 g! reg_data(16) [63:0] $end
    $var wire 64 i! reg_data(17) [63:0] $end
    $var wire 64 k! reg_data(18) [63:0] $end
    $var wire 64 m! reg_data(19) [63:0] $end
    $var wire 64 K! reg_data(2) [63:0] $end
    $var wire 64 o! reg_data(20) [63:0] $end
    $var wire 64 q! reg_data(21) [63:0] $end
    $var wire 64 s! reg_data(22) [63:0] $end
    $var wire 64 u! reg_data(23) [63:0] $end
    $var wire 64 w! reg_data(24) [63:0] $end
    $var wire 64 y! reg_data(25) [63:0] $end
    $var wire 64 {! reg_data(26) [63:0] $end
    $var wire 64 }! reg_data(27) [63:0] $end
    $var wire 64 !" reg_data(28) [63:0] $end
    $var wire 64 #" reg_data(29) [63:0] $end
    $var wire 64 M! reg_data(3) [63:0] $end
    $var wire 64 %" reg_data(30) [63:0] $end
    $var wire 64 '" reg_data(31) [63:0] $end
    $var wire 64 O! reg_data(4) [63:0] $end
    $var wire 64 Q! reg_data(5) [63:0] $end
    $var wire 64 S! reg_data(6) [63:0] $end
    $var wire 64 U! reg_data(7) [63:0] $end
    $var wire 64 W! reg_data(8) [63:0] $end
    $var wire 64 Y! reg_data(9) [63:0] $end
    $var wire  1 _" reset $end
    $var wire 64 ) rf_jalr_rs1_rdata_o [63:0] $end
    $var wire 64 / rf_rs1_rdata_o [63:0] $end
    $var wire 64 1 rf_rs2_rdata_o [63:0] $end
    $var wire  1 , rs1_en_i $end
    $var wire  5 ( rs1_idx_i [4:0] $end
    $var wire  1 - rs2_en_i $end
    $var wire  5 . rs2_idx_i [4:0] $end
   $upscope $end
   $scope module u_wb $end
    $var wire 64 ? alu_rd_wdata_i [63:0] $end
    $var wire 64 s" csr_rd_wdata_i [63:0] $end
    $var wire 64 q" mem_rd_wdata_i [63:0] $end
    $var wire  1 3 rd_en_i $end
    $var wire  5 4 rd_idx_i [4:0] $end
    $var wire  1 3 wb_rd_en_o $end
    $var wire  5 4 wb_rd_idx_o [4:0] $end
    $var wire 64 ? wb_rd_wdata_o [63:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000000000000000000000000000000000000000000000000000000 #
b0000000000000000000000000000000000000000000000000000000000000100 %
0'
b00111 (
b0000000000000000000000000000000000000000000000000000000000000000 )
b00000000001000111000001110010011 +
1,
0-
b00010 .
b0000000000000000000000000000000000000000000000000000000000000000 /
b0000000000000000000000000000000000000000000000000000000000000000 1
13
b00111 4
b100000000000 5
b1000000000 6
b000000 7
b00000000000 8
b000000 9
b0000000000000000000000000000000000000000000000000000000000000010 :
0<
0=
0>
b0000000000000000000000000000000000000000000000000000000000000010 ?
0A
0B
b0000000000000000000000000000000000000000000000000000000000000010 C
0E
b0000000000000000000000000000000000000000000000000000000000000000 F
b0000000000000000000000000000000000000000000000000000000000000000 H
b0000000000000000000000000000000000000000000000000000000000000100 J
b0000000000 L
b100000000000 M
1N
1O
b1000000000 P
b00000000000 Q
b000000 R
0S
0T
0U
b0010011 V
b000 W
b0000000 X
1Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
1e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
b0000000000000000000000000000000000000000000000000000000000000010 :!
b0000000000000000000000000000000000000000000000000000000000000111 <!
b0000000000000000000000000000000000000000000000000000100000000110 >!
b0000000000000000000000000000000000000000000000111000000000000010 @!
b0000000000000000000000000000000000000000001000111000000000000000 B!
1D!
0E!
0F!
0G!
0H!
b0000000000000000000000000000000000000000000000000000000000000000 I!
b0000000000000000000000000000000000000000000000000000000000000000 K!
b0000000000000000000000000000000000000000000000000000000000000000 M!
b0000000000000000000000000000000000000000000000000000000000000000 O!
b0000000000000000000000000000000000000000000000000000000000000000 Q!
b0000000000000000000000000000000000000000000000000000000000000000 S!
b0000000000000000000000000000000000000000000000000000000000000000 U!
b0000000000000000000000000000000000000000000000000000000000000000 W!
b0000000000000000000000000000000000000000000000000000000000000000 Y!
b0000000000000000000000000000000000000000000000000000000000000000 [!
b0000000000000000000000000000000000000000000000000000000000000000 ]!
b0000000000000000000000000000000000000000000000000000000000000000 _!
b0000000000000000000000000000000000000000000000000000000000000000 a!
b0000000000000000000000000000000000000000000000000000000000000000 c!
b0000000000000000000000000000000000000000000000000000000000000000 e!
b0000000000000000000000000000000000000000000000000000000000000000 g!
b0000000000000000000000000000000000000000000000000000000000000000 i!
b0000000000000000000000000000000000000000000000000000000000000000 k!
b0000000000000000000000000000000000000000000000000000000000000000 m!
b0000000000000000000000000000000000000000000000000000000000000000 o!
b0000000000000000000000000000000000000000000000000000000000000000 q!
b0000000000000000000000000000000000000000000000000000000000000000 s!
b0000000000000000000000000000000000000000000000000000000000000000 u!
b0000000000000000000000000000000000000000000000000000000000000000 w!
b0000000000000000000000000000000000000000000000000000000000000000 y!
b0000000000000000000000000000000000000000000000000000000000000000 {!
b0000000000000000000000000000000000000000000000000000000000000000 }!
b0000000000000000000000000000000000000000000000000000000000000000 !"
b0000000000000000000000000000000000000000000000000000000000000000 #"
b0000000000000000000000000000000000000000000000000000000000000000 %"
b0000000000000000000000000000000000000000000000000000000000000000 '"
b00000000000000000000000000000000 )"
1*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
13"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
1="
0>"
1?"
b0000000000000000000000000000000000000000000000000000000000000000 @"
b0000000000000000000000000000000000000000000000000000000000000010 B"
b0000000000000000000000000000000000000000000000000000000000000010 D"
b0000000000000000000000000000000000000000000000000000000000000000 F"
b0000000000000000000000000000000000000000000000000000000000000000 H"
b0000000000000000000000000000000000000000000000000000000000000010 J"
b0000000000000000000000000000000000000000000000000000000000000000 L"
b0000000000000000000000000000000000000000000000000000000000000000 N"
b0000000000000000000000000000000000000000000000000000000000000010 P"
b0000000000000000000000000000000000000000000000000000000000000000 R"
b0000000000000000000000000000000000000000000000000000000000000010 T"
0V"
b00000000000000000000000000000010 W"
b0000000000000000000000000000000000000000000000000000000000000010 X"
0Z"
1["
0\"
1]"
0^"
1_"
0`"
0a"
b0000000000000000000000000000000000000000000000000000000000000000 b"
0d"
1e"
b00000000000000000000000001000000 f"
b00000000000000000000000000000000 g"
b0000000000000000000000000000000000000000000000000000000000000000 h"
b0000000000000000000000000000000000000000000000000000000000000000 j"
0l"
b0000000000000000000000000000000000000000000000000000000000000000 m"
0o"
0p"
b0000000000000000000000000000000000000000000000000000000000000000 q"
b0000000000000000000000000000000000000000000000000000000000000000 s"
#1
b00000000000000000000000000100000 )"
1^"
#2
0^"
0_"
#3
b0000000000000000000000000000000000000000000000000000000000000100 #
b0000000000000000000000000000000000000000000000000000000000001000 %
b00110 (
b00000000000100110000001100010011 +
b00001 .
b00110 4
b0000000000000000000000000000000000000000000000000000000000000001 :
b0000000000000000000000000000000000000000000000000000000000000001 ?
b0000000000000000000000000000000000000000000000000000000000000001 C
b0000000000000000000000000000000000000000000000000000000000000100 H
b0000000100 L
b0000000000000000000000000000000000000000000000000000000000000001 :!
b0000000000000000000000000000000000000000000000000000000000000110 <!
b0000000000000000000000000000000000000000000000000000000000000110 >!
b0000000000000000000000000000000000000000000000110000100000000000 @!
b0000000000000000000000000000000000000000000100110000000000000000 B!
b0000000000000000000000000000000000000000000000000000000000000010 U!
b0000000000000000000000000000000000000000000000000000000000000001 B"
b0000000000000000000000000000000000000000000000000000000000000001 D"
b0000000000000000000000000000000000000000000000000000000000000001 J"
b0000000000000000000000000000000000000000000000000000000000000001 P"
b0000000000000000000000000000000000000000000000000000000000000001 T"
b00000000000000000000000000000001 W"
b0000000000000000000000000000000000000000000000000000000000000001 X"
1^"
#4
0^"
#5
b0000000000000000000000000000000000000000000000000000000000001000 #
b0000000000000000000000000000000000000000000000000000000000001100 %
b00000000011100110000001010110011 +
1-
b00111 .
b0000000000000000000000000000000000000000000000000000000000000001 /
b0000000000000000000000000000000000000000000000000000000000000010 1
b00101 4
b001000000000 5
b0000000000000000000000000000000000000000000000000000000000000000 :
b0000000000000000000000000000000000000000000000000000000000000011 ?
b0000000000000000000000000000000000000000000000000000000000000000 C
b0000000000000000000000000000000000000000000000000000000000001000 H
b0000001000 L
b001000000000 M
b0110011 V
0Y
1[
0e
1r
b0000000000000000000000000000000000000000000000000000000000000111 :!
b0000000000000000000000000000000000000000000000000000000000000101 <!
b0000000000000000000000000000000000000000000000000000100000000100 >!
b0000000000000000000000000000000000000000000000110000100000000110 @!
b0000000000000000000000000000000000000000011100110000000000000000 B!
0D!
b0000000000000000000000000000000000000000000000000000000000000001 S!
0*"
1,"
b0000000000000000000000000000000000000000000000000000000000000001 @"
b0000000000000000000000000000000000000000000000000000000000000010 B"
b0000000000000000000000000000000000000000000000000000000000000011 D"
b0000000000000000000000000000000000000000000000000000000000000100 F"
b0000000000000000000000000000000000000000000000000000000000000011 J"
b0000000000000000000000000000000000000000000000000000000000000011 P"
b0000000000000000000000000000000000000000000000000000000000000011 T"
b00000000000000000000000000000011 W"
b0000000000000000000000000000000000000000000000000000000000000011 X"
1^"
#6
0^"
#7
b0000000000000000000000000000000000000000000000000000000000001100 #
b0000000000000000000000000000000000000000000000000000000000010000 %
b01010 (
b00000000010101010010010000100011 +
b00101 .
b0000000000000000000000000000000000000000000000000000000000000000 /
b0000000000000000000000000000000000000000000000000000000000000011 1
03
b01000 4
b000000001000 5
b0000000000 6
b00000000010 8
b0000000000000000000000000000000000000000000000000000000000001000 :
b0000000000000000000000000000000000000000000000000000000000000000 ?
b0000000000000000000000000000000000000000000000000000000000001000 C
b0000000000000000000000000000000000000000000000000000000000001100 H
b0000001100 L
b000000001000 M
0O
b0000000000 P
b00000000010 Q
b0100011 V
b010 W
0[
1a
0r
12!
b0000000000000000000000000000000000000000000000000000000000000101 :!
b0000000000000000000000000000000000000000000000000000000000001000 <!
b0000000000000000000000000000000000000000000000000000000000001000 >!
b0000000000000000000000000000000000000000000001010010100000000100 @!
b0000000000000000000000000000000000000000010101010010000000000000 B!
b0000000000000000000000000000000000000000000000000000000000000011 Q!
0,"
03"
0="
0?"
b0000000000000000000000000000000000000000000000000000000000000000 @"
b0000000000000000000000000000000000000000000000000000000000000011 B"
b0000000000000000000000000000000000000000000000000000000000000000 F"
b0000000000000000000000000000000000000000000000000000000000000000 T"
b00000000000000000000000000000000 W"
b0000000000000000000000000000000000000000000000000000000000000000 X"
1^"
#8
0^"
#9
b0000000000000000000000000000000000000000000000000000000000010000 #
b0000000000000000000000000000000000000000000000000000000000010100 %
b00000 (
b00000000000000000000000000000000 +
0-
b00000 .
b0000000000000000000000000000000000000000000000000000000000000000 1
13
b00000 4
b000000000000 5
b00000000000 8
b0000000000000000000000000000000000000000000000000000000000000000 :
b0000000000000000000000000000000000000000000000000000000000000000 C
b0000000000000000000000000000000000000000000000000000000000010000 H
b0000010000 L
b000000000000 M
1O
b00000000000 Q
b0000000 V
b000 W
0a
02!
b0000000000000000000000000000000000000000000000000000000000000000 :!
b0000000000000000000000000000000000000000000000000000000000000000 <!
b0000000000000000000000000000000000000000000000000000000000000000 >!
b0000000000000000000000000000000000000000000000000000000000000000 @!
b0000000000000000000000000000000000000000000000000000000000000000 B!
b0000000000000000000000000000000000000000000000000000000000000000 B"
b0000000000000000000000000000000000000000000000000000000000000000 D"
b0000000000000000000000000000000000000000000000000000000000000000 J"
b0000000000000000000000000000000000000000000000000000000000000000 P"
1Z"
0["
1^"
#10
0^"
#11
b0000000000000000000000000000000000000000000000000000000000010100 #
b0000000000000000000000000000000000000000000000000000000000011000 %
b0000000000000000000000000000000000000000000000000000000000010100 H
b0000010100 L
1^"
#12
0^"
#13
b0000000000000000000000000000000000000000000000000000000000011000 #
b0000000000000000000000000000000000000000000000000000000000011100 %
b0000000000000000000000000000000000000000000000000000000000011000 H
b0000011000 L
1^"
#14
0^"
#15
b0000000000000000000000000000000000000000000000000000000000011100 #
b0000000000000000000000000000000000000000000000000000000000100000 %
b0000000000000000000000000000000000000000000000000000000000011100 H
b0000011100 L
1^"
#16
0^"
#17
b0000000000000000000000000000000000000000000000000000000000100000 #
b0000000000000000000000000000000000000000000000000000000000100100 %
b0000000000000000000000000000000000000000000000000000000000100000 H
b0000100000 L
1^"
#18
0^"
#19
b0000000000000000000000000000000000000000000000000000000000100100 #
b0000000000000000000000000000000000000000000000000000000000101000 %
b0000000000000000000000000000000000000000000000000000000000100100 H
b0000100100 L
1^"
